rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {
		// function prefix() {
		// return /databases/$(db)/documents;
		// }
    
    match /{document=**} {
      allow read, write: if false;
    }
    
    match /user_profiles/{uid} {
    	allow read, write: if isLoggedIn();
    }
    
    match /chat_rooms/{roomId} {
    	allow read, write: if isLoggedIn();
    }
    
    match /{path=**}/messages/{messageId} {
    	allow read, write: if isLoggedIn();
    }
    
    match /places/{placeId} {
    	allow read, write: if isLoggedIn();
      
      match /services/{serviceId} {
      	allow write: if isLoggedIn();
        
        match /reviews/{reviewId} {
        	allow read, write: if isLoggedIn();
        }
      }
      
      match /appointments/{apptId} {
      	allow write: if isLoggedIn();
      }
    }
    
    match /{path=**}/services/{serviceId} {
      	allow read: if isLoggedIn();
    }
    
    match /{path=**}/appointments/{apptId} {
      	allow read: if isLoggedIn();
    }
  }
}

// @required: an array of fields that must be included in the incoming doc
// @optional: an array of fields that are optional in the incoming doc
// function fieldsExist(required, optional) {
//   let allAllowedFields = required.concat(optional);
//   return request.resource.data.keys().hasOnly(allAllowedFields) &&
//   request.resource.data.keys().hasAll(required);
// }

function isLoggedIn() {
  return request.auth != null;
}